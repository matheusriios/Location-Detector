version: '3'

volumes:
  redis-cache:
    driver: local

services:
  base: &base
    hostname: base
    image: challenge/stream-application
    stdin_open: true
    tty: true
    build:
      context: .
      dockerfile: dev.Dockerfile

  app:
    <<: *base
    command: /bin/ash -c "npm install && npm run dev"
    env_file: .env
    environment:
      NODE_PATH: .
      NODE_ENV: development
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKERS: kafka-internal.io:29092
      KAFKA_USERNAME: username
      KAFKA_PASSWORD: password
      KAFKA_IP_GEOLOCATION_CONSUMER_GROUP_ID: ip-geolocation-consumer
      KAFKA_TOPIC_IP_GEOLOCATION: ip-geolocation-dev
      IP_STACK_API_URL: http://api.ipstack.com
      REDIS_PORT: '6379'
      REDIS_HOST: 'redis'
      REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      REDIS_CLIENT_IP_HASH: client-ip-dev
      IP_SEARCH_WINDOW_MINUTES: '1'
    volumes:
      - .:/app
    depends_on:
      - zookeeper
      - kafka
      - control-center
      - redis

  tst:
    <<: *base
    command: /bin/ash -c "npm install && npm run test"
    environment:
      NODE_PATH: .
      NODE_ENV: test
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKERS: kafka-internal.io:29092
      KAFKA_USERNAME: username
      KAFKA_PASSWORD: password
      KAFKA_IP_GEOLOCATION_CONSUMER_GROUP_ID: ip-geolocation-consumer
      KAFKA_TOPIC_IP_GEOLOCATION: ip-geolocation-test
      IP_STACK_API_URL: http://mock.ipstack.com
      IP_STACK_API_ACCESS_KEY: mock-api-key
      REDIS_PORT: '6379'
      REDIS_HOST: 'redis'
      REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      REDIS_CLIENT_IP_HASH: client-ip-test
      IP_SEARCH_WINDOW_MINUTES: '1'
    volumes:
      - .:/app
    depends_on:
      - zookeeper
      - kafka
      - control-center
      - redis

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - redis-cache:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    hostname: 'kafka-internal.io'
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka-internal.io
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.2.1
    hostname: control-center
    container_name: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:29092'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  lint:
    <<: *base
    command: /bin/ash -c "npm run lint"
    volumes:
      - .:/app

  build:
    <<: *base
    command: /bin/ash -c "npm run build"
    volumes:
      - .:/app